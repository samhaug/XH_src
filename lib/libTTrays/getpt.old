c --------------------------------------------------------------------------

      subroutine getpt(mod,lmd,phs,lph,del,hdep,fp,ftime)

      parameter(MXDEP=50)
      parameter(MXDEL=250)
      dimension deps(MXDEP),time(MXDEP),y3(MXDEP),p(MXDEP)
      dimension delta(MXDEL),ttime(MXDEL),rayp(MXDEL),y2(MXDEL)
      character*(*)phs,mod
      character*80 ifl

      ifl='/home/hendrik1/dta/phstimes/'//phs(1:lph)//'.phs.'//mod(1:lmd)
      open(21,file=ifl,form='unformatted',status='old',err=1000)

      read(21) ndel,ndep,(deps(k),k=1,ndep)
      do i=1,ndep
       read(21) (delta(k),k=ndel,1,-1),(ttime(k),k=ndel,1,-1),(rayp(k),k=ndel,1,-1)
       call spline(delta,ttime,ndel,1e32,1e32,y2)
       call splint(delta,ttime,y2,ndel,del,time(i))
       call spline(delta,rayp,ndel,1e32,1e32,y2)
       call splint(delta,rayp,y2,ndel,del,p(i))
      enddo

      close(21)

      call spline(deps,time,ndep,1e31,1e31,y3)
      call splint(deps,time,y3,ndep,hdep,ftime)
      call spline(deps,p,ndep,1e31,1e31,y3)
      call splint(deps,p,y3,ndep,hdep,fp)

      return

1000  stop 'appropriate phase file not found'

      end

c ------------------------------------------------------------------

      SUBROUTINE spline(x,y,n,yp1,ypn,y2)
      INTEGER n,NMAX
      REAL yp1,ypn,x(n),y(n),y2(n)
      PARAMETER (NMAX=500)
      INTEGER i,k
      REAL p,qn,sig,un,u(NMAX)
      if (yp1.gt..99e30) then
        y2(1)=0.
        u(1)=0.
      else
        y2(1)=-0.5
        u(1)=(3./(x(2)-x(1)))*((y(2)-y(1))/(x(2)-x(1))-yp1)
      endif
      do 11 i=2,n-1
        sig=(x(i)-x(i-1))/(x(i+1)-x(i-1))
        p=sig*y2(i-1)+2.
        y2(i)=(sig-1.)/p
        u(i)=(6.*((y(i+1)-y(i))/(x(i+
     *1)-x(i))-(y(i)-y(i-1))/(x(i)-x(i-1)))/(x(i+1)-x(i-1))-sig*
     *u(i-1))/p
11    continue
      if (ypn.gt..99e30) then
        qn=0.
        un=0.
      else
        qn=0.5
        un=(3./(x(n)-x(n-1)))*(ypn-(y(n)-y(n-1))/(x(n)-x(n-1)))
      endif
      y2(n)=(un-qn*u(n-1))/(qn*y2(n-1)+1.)
      do 12 k=n-1,1,-1
        y2(k)=y2(k)*y2(k+1)+u(k)
12    continue
      return
      END
C  (C) Copr. 1986-92 Numerical Recipes Software '%1&9p#!.


      SUBROUTINE splint(xa,ya,y2a,n,x,y)
      INTEGER n
      REAL x,y,xa(n),y2a(n),ya(n)
      INTEGER k,khi,klo
      REAL a,b,h
      klo=1
      khi=n
1     if (khi-klo.gt.1) then
        k=(khi+klo)/2
        if(xa(k).gt.x)then
          khi=k
        else
          klo=k
        endif
      goto 1
      endif
      h=xa(khi)-xa(klo)
      if (h.eq.0.) pause 'bad xa input in splint'
      a=(xa(khi)-x)/h
      b=(x-xa(klo))/h
      y=a*ya(klo)+b*ya(khi)+((a**3-a)*y2a(klo)+(b**3-b)*y2a(khi))*(h**
     *2)/6.
      return
      END
C  (C) Copr. 1986-92 Numerical Recipes Software '%1&9p#!.
